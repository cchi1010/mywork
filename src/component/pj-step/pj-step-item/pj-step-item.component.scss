@import "/src/scss/customize";
@import "/src/scss/color";
@import "/src/scss/typography";

$pj-step-item-size: (md, lg);

$pj-step-item-font: (
  stepTitle: (
    md: $pj-label-md,
    lg: $pj-label-lg,
    pending: (
      md: $pj-label-md,
      lg: $pj-label-lg,
    ),
  ),
  stepSerialLabel: (
    md: $pj-tiny,
    lg: $pj-small,
    pending: (
      md: $pj-tiny,
      lg: $pj-small,
    ),
  ),
);

$pj-step-item-measurement: (
  line: (
    width: 100%,
    border: 4px 0px 0px 0px,
    radius: 4px,
  ),
);

$pj-step-item-style: (
  line: (
    bd: map-get($pj-secondary, 500),
  ),
  stepSerialLabel: (
    fg: map-get($pj-secondary, 600),
  ),
  stepTitle: (
    fg: map-get($pj-neutral, 800),
  ),
  hover: (
    line: (bd: map-get($pj-secondary, 600))
  ),
  ongoing: (
    line: (bd: map-get($pj-secondary, 500)),
    stepSerialLabel: (fg: map-get($pj-secondary, 600)),
    stepTitle: (fg: map-get($pj-neutral, 700)),
  ),
  completed: (
    line: (bd: map-get($pj-secondary, 150)),
    stepSerialLabel: (fg: map-get($pj-neutral, 600)),
    stepTitle: (fg: map-get($pj-neutral, 800)),
  ),
  pending: (
    line: (bd: map-get($pj-neutral, 50)),
    stepSerialLabel: (fg: map-get($pj-neutral, 200)),
    stepTitle: (fg: map-get($pj-neutral, 200)),
  ), 
  pressed: (
    line: (bd: map-get($pj-secondary, 800)),
  ),
);
.pj-step-item {
  @each $size in (md, lg) {
    &.#{$size} {
      & .stepTitle {
        font: map-get-ext($pj-step-item-font, stepTitle, $size);
      }
      & .stepSerialLabel {
        font: map-get-ext($pj-step-item-font, stepSerialLabel, $size);
      }
      &.pending {
        & .stepTitle {
          font: map-get-ext($pj-step-item-font, stepTitle, pending, $size);
        }
        & .stepSerialLabel {
          font: map-get-ext($pj-step-item-font,stepSerialLabel,pending,$size);
        }
      }
      &.completed {
        & .stepTitle {
          font: map-get-ext($pj-step-item-font, stepTitle, pending, $size);
        }
        & .stepSerialLabel {
          font: map-get-ext($pj-step-item-font,stepSerialLabel,pending,$size);
        }
      }
    }
  }

  & .line {
    border-top-style: solid;
    @include pjMeasurementWithMapExt($pj-step-item-measurement, line);
    @include pjColorWithMapExt($pj-step-item-style, line);
  }

  & .stepTitle {
    @include pjColorWithMapExt($pj-step-item-style, stepTitle);
  }
  & .stepSerialLabel {
    @include pjColorWithMapExt($pj-step-item-style, stepSerialLabel);
  }
 
  &.completed {
    cursor: pointer;
    & .line {
      @include pjColorWithMapExt($pj-step-item-style, completed, line);
    }
    & .stepTitle {
      @include pjColorWithMapExt($pj-step-item-style, completed, stepTitle);
    }
    & .stepSerialLabel {
      @include pjColorWithMapExt($pj-step-item-style, completed, stepSerialLabel);
    }
    &.disabled {
      pointer-events: none;
      cursor: default;
    }
  }
  &.ongoing {
    pointer-events: none;
    & .line {
      @include pjColorWithMapExt($pj-step-item-style, ongoing, line);
    }
    & .stepTitle {
      @include pjColorWithMapExt($pj-step-item-style, ongoing, stepTitle);
    }
    & .stepSerialLabel {
      @include pjColorWithMapExt($pj-step-item-style, ongoing, stepSerialLabel);
    }
  }
  &.pending {
    cursor: pointer;
    & .line {
      @include pjColorWithMapExt($pj-step-item-style, pending, line);
    }
    & .stepTitle {
      @include pjColorWithMapExt($pj-step-item-style, pending, stepTitle);
    }
    & .stepSerialLabel {
      @include pjColorWithMapExt($pj-step-item-style, pending, stepSerialLabel);
    }
  }
  &:hover {
    & .line {
      @include pjColorWithMapExt($pj-step-item-style, hover, line);
    }
  }
  &.pressed {
    & .line {
      @include pjColorWithMapExt($pj-step-item-style, pressed, line);
    }
  }
}
