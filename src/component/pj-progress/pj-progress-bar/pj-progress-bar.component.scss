@import "/src/scss/color";
@import "/src/scss/typography";
@import "/src/scss/customize";

$pj-progressbar-measurement: (
  sm: (
    height: 4px,
    radius: 8px,
    box: (
      height: 4px,
      width: 100%,
      radius: 8px,
    ),
  ),
  md: (
    height: 10px,
    radius: 12px,
    box: (
      height: 10px,
      width: 100%,
      radius: 12px,
    ),
  ),
);
$pj-progressbar-style: (
  primary: (
    bg: map-get($pj-primary, 500),
  ),
  error: (
    bg: map-get($pj-error, 300),
  ),
  success: (
    bg: map-get($pj-success, 500),
  ),
  warn: (
    bg: map-get($pj-warning, 500),
  ),
  secondary: (
    bg: map-get($pj-secondary, 500),
  ),
  box: (
    primary: (
      bg: map-get($pj-neutral, 50),
    ),
    error: (
      bg: map-get($pj-neutral, 50),
    ),
    warn: (
      bg: map-get($pj-neutral, 50),
    ),
    success: (
      bg: map-get($pj-neutral, 50),
    ),
    secondary: (
      bg: map-get($pj-neutral, 50),
    ),
  ),
);

@each $color in (primary, secondary, warn, error, success) {
  .pj-progress-bar-box.#{$color} {
    @include pjColorWithMapExt($pj-progressbar-style, box, $color);
    & .pj-progress-bar {
      @include pjColorWithMapExt($pj-progressbar-style, $color);
    }
  }
}

@each $size in (sm, md) {
  .pj-progress-bar-box.#{$size} {
    @include pjMeasurementWithMapExt($pj-progressbar-measurement, $size, box);
    & .pj-progress-bar {
      @include pjMeasurementWithMapExt($pj-progressbar-measurement, $size);
      transition: width 0.4s ease;
    }
  }
}
