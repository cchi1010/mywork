@import "/src/scss/customize";
@import "/src/scss/color";
@import "/src/scss/typography";

$pj-codebox-size: (md);
$pj-codebox-font: (
  code: $pj-label-xl,
  errorMsg: $pj-h6,
);
$pj-codebox-measurement: (
  width: 40px,
  height: 48px,
  radius: 6px,
  border: 1px,
  padding: 0 0 0 14px,
  margin: 4px,
);
$pj-codebox-style: (
  fg: map-get($pj-primary, 800),
  bg: map-get($pj-primary, 10),
  bd: map-get($pj-primary, 100),
  filled: (
    bg: $pj-white,
  ),
  focused: (
    bg: $pj-white,
    bd: map-get($pj-secondary, 500),
    sdA: $pj-input-shadow,
  ),
  error: (
    fg: map-get($pj-error, 800),
    bg: map-get($pj-error, 10),
    bd: map-get($pj-error, 500),
  ),
  errorMsg: (
    fg: map-get($pj-error, 500),
  ),
);

@each $size in $pj-codebox-size {
  .pj-codebox.#{$size} {
    & .inputBox {
      font: map-get($pj-codebox-font, code);
      @include pjMeasurementWithMapExt($pj-codebox-measurement);
      @include pjColorWithMapExt($pj-codebox-style);
      border-style: solid;
      outline: none;
      &.filled {
        @include pjColorWithMapExt($pj-codebox-style, filled);
      }
      &:focus {
        @include pjColorWithMapExt($pj-codebox-style, focused);
      }
      &.error {
        @include pjColorWithMapExt($pj-codebox-style, error);
      }
    }
    & .errorMsg {
      font: map-get($pj-codebox-font, errorMsg);
      @include pjColorWithMapExt($pj-codebox-style, errorMsg);
    }
  }
}
