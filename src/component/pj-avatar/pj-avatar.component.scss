@import "/src/scss/customize";
@import "/src/scss/color";
@import "/src/scss/typography";

$pj-avatar-font: (xs: $pj-tiny,sm: $pj-small,md: $pj-strong-2,lg: $pj-strong-1,xl: $pj-h3,xxl: $pj-h1);

$pj-avatar-measurement: (
  xs: (width: 24px,height: 24px,radius: 24px,icon: 7px,border: 1px),
  sm: (width: 32px,height: 32px,radius: 32px,icon: 9px,border: 1px),
  md: (width: 40px,height: 40px,radius: 40px,icon: 10px,border: 2px),
  lg: (width: 48px,height: 48px,radius: 48px,icon: 12px,border: 2px),
  xl: (width: 80px,height: 80px,radius: 80px,icon: 18px,border: 4px),
  xxl: (width: 144px,height: 144px,radius: 144px,icon: 32px,border: 4px),
);
$pj-avatar-style: (
  initial-label: (fg: $pj-white),
  bd: $pj-white,
  bg: map-get($pj-primary, 200),
);
$pj-avatar-notification-style: (
  fg: map-get($pj-brand, 500),
  bg: map-get($pj-brand, 500),
);

$pj-avatar-status-style: (
  online: (fg: map-get($pj-success, 500),bg: map-get($pj-success, 500)),
  offline: (fg: map-get($pj-neutral, 100),bg: map-get($pj-neutral, 100)),
  imageIcon: (
    bg: $pj-white,     
    sdA: map-get($pj-neutral-shadow, 1a),
    sdB: map-get($pj-neutral-shadow, 1b)
  ),
);

$pj-avatar-notification: (
  xs: (top: -1px,left: 17px,border: 1px,radius: 8px),
  sm: (top: -1px,left: 23px,border: 1px,radius: 10px),
  md: (top: -2px,left: 29px,border: 2px,radius: 12px),
  lg: (top: -2px,left: 35px,border: 2px,radius: 14px),
  xl: (top: -4px,left: 59px,border: 4px,radius: 22px),
  xxl: (top: -4px,left: 109px,border: 4px,radius: 36px),
);

$pj-avatar-status: (
  xs: (top: 15px,left: 15px,border: 1px,radius: 7px),
  sm: (top: 21px,left: 21px,border: 1px,radius: 9px),
  md: (top: 26px,left: 26px,border: 2px,radius: 10px),
  lg: (top: 32px,left: 32px,border: 2px,radius: 12px),
  xl: (top: 54px,left: 54px,border: 4px,radius: 18px),
  xxl: (top: 104px,left: 104px,border: 4px,radius: 32px),
);

@each $size in $pj-size-6level {
  .pj-avatar.#{$size} {
    @include pjColorWithMapExt($pj-avatar-style);
    @include pjMeasurementWithMapExt($pj-avatar-measurement, $size);
    border-style: solid;

    & .icon {
      font-size: map-get-ext($pj-avatar-measurement, $size, icon);
    }

    & .notification {
      position: absolute;
      top: map-get-ext($pj-avatar-notification, $size, top);
      left: map-get-ext($pj-avatar-notification, $size, left);
      border: map-get-ext($pj-avatar-notification, $size, border) solid $pj-white;
      border-radius: map-get-ext($pj-avatar-notification, $size, radius);

      &.on {
        @include pjColorWithMapExt($pj-avatar-notification-style);
      }
    }

    & .initial-label {
      font: map-get-ext($pj-avatar-font, $size);
      @include pjColorWithMapExt($pj-avatar-style, initial-label);
    }

    & .onlineFlag {
      position: absolute;
      top: map-get-ext($pj-avatar-status, $size, top);
      left: map-get-ext($pj-avatar-status, $size, left);
      border: map-get-ext($pj-avatar-status, $size, border) solid $pj-white;
      border-radius: map-get-ext($pj-avatar-status, $size, radius);

      @each $status in (online, offline, imageIcon) {
        &.#{$status} {
          @include pjColorWithMapExt($pj-avatar-status-style, $status);
        }
      }
    }
  }
}
