@import "/src/scss/customize";
@import "/src/scss/color";
@import "/src/scss/typography";

$pj-badge-size: (sm, md, lg);

$pj-badge-font: (
  sm: $pj-label-sm,
  md: $pj-label-md,
  lg: $pj-label-lg,
);
$pj-badge-measurement: (
  sm: (
    height: 18px,
    padding: 1px 6px 1px 6px,
    radius: 24px,
  ),
  md: (
    height: 20px,
    padding: 1px 6px 1px 6px,
    radius: 23px,
  ),
  lg: (
    height: 24px,
    padding: 2px 8px 0px 8px,
    radius: 24px,
  ),
  dot: (
    margin: 0 2px 0 -2px,
  ),
);

$pj-badge-style: (
  primary: (
    fg: map-get($pj-primary, 800),
    bg: map-get($pj-primary, 50),
    dot: (
      fg: map-get($pj-primary, 300),
    ),
  ),
  secondary: (
    fg: map-get($pj-secondary, 700),
    bg: map-get($pj-secondary, 100),
    dot: (
      fg: map-get($pj-secondary, 200),
    ),
  ),
  brand: (
    fg: map-get($pj-brand, 700),
    bg: map-get($pj-brand, 50),
    dot: (
      fg: map-get($pj-brand, 200),
    ),
  ),
  neutral: (
    fg: map-get($pj-neutral, 900),
    bg: map-get($pj-neutral, 50),
    dot: (
      fg: map-get($pj-neutral, 150),
    ),
  ),
  info: (
    fg: map-get($pj-info, 700),
    bg: map-get($pj-info, 50),
    dot: (
      fg: map-get($pj-info, 200),
    ),
  ),
  success: (
    fg: map-get($pj-success, 900),
    bg: map-get($pj-success, 50),
    dot: (
      fg: map-get($pj-success, 300),
    ),
  ),
  warning: (
    fg: map-get($pj-warning, 900),
    bg: map-get($pj-warning, 100),
    dot: (
      fg: map-get($pj-warning, 300),
    ),
  ),
  error: (
    fg: $pj-white,
    bg: map-get($pj-error, 500),
    dot: (
      fg: map-get($pj-error, 50),
    ),
  ),
  whiteBtn: (
    fg: map-get($pj-neutral, 900),
    bg: $pj-white,
    dot: (
      fg: map-get($pj-neutral, 150),
    ),
  ),
  blackBtn: (
    fg: $pj-white,
    bg: map-get($pj-neutral, 800),
    dot: (
      fg: map-get($pj-neutral, 150),
    ),
  ),
);

.pj-badge {
  cursor: inherit;
  @each $size in $pj-badge-size {
    &.#{$size} {
      font: map-get($pj-badge-font, $size);
      @include pjMeasurementWithMapExt($pj-badge-measurement, $size);
    }
  }
  @each $color in join($pj-style, (whiteBtn, blackBtn)) {
    &.#{$color} {
      @include pjColorWithMapExt($pj-badge-style, $color);
      & .dot {
        @include pjMeasurementWithMapExt($pj-badge-measurement, dot);
        @include pjColorWithMapExt($pj-badge-style, $color, dot);
      }
    }
  }
}
